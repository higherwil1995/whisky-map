name: CI Workflow

on:
  push:
    branches:
      - main

jobs:
    lint:
      name: Lint
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        
        - name: Set up Python
          uses: actions/setup-python@v4
          with:
            python-version: '3.11'
            
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install ruff black isort mypy
            pip install -r requirements.txt
        
        - name: Run linters
          run: |
            ruff check .
            # black --check .
            # isort --check-only .
            # mypy .
            # flake8 . --ignore=N999  # 忽略包名稱檢查

    test_code:
      name: Test Code
      strategy:
        matrix:
          python-version: ['3.9', '3.10', '3.11']
          # platform: [ubuntu-latest, macos-latest, windows-latest]
          platform: [ubuntu-latest, macos-latest]
      runs-on: ${{ matrix.platform }}
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v4
          with:
            python-version: ${{ matrix.python-version }}
            
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install pytest pytest-cov
            pip install -r requirements.txt
            
        - name: Run tests
          run: |
            pytest --cov=./ --cov-report=xml

    build_and_push:
      name: Build and Push Docker Image
      needs: [lint, test_code]
      runs-on: ubuntu-latest
      steps:
          - name: Checkout
            uses: actions/checkout@v4
            with:
              fetch-depth: 0

          - name: Setup QEMU
            uses: docker/setup-qemu-action@v3

          - name: Setup Docker Buildx
            uses: docker/setup-buildx-action@v3

          - name: Login to GitHub Container Registry
            uses: docker/login-action@v3
            with:
              registry: ghcr.io
              username: ${{ github.repository_owner }}
              password: ${{ secrets.CI_ACCESS_TOKEN }}

          - name: Docker meta
            id: docker-meta
            uses: docker/metadata-action@v5
            with:
              images: |
                ghcr.io/${{ github.repository }}
              tags: |
                type=raw,value=latest,enable={{is_default_branch}}
                type=semver,pattern={{version}}
                type=semver,pattern={{major}}.{{minor}}
                type=semver,pattern={{major}}
          
          - name: Build and push
            uses: docker/build-push-action@v6
            with:
              context: .
              platforms: linux/amd64,linux/arm64
              file: Dockerfile
              push: true
              tags: ${{ steps.docker-meta.outputs.tags }}
              labels: ${{ steps.docker-meta.outputs.labels }}
              cache-from: type=registry,ref=ghcr.io/${{ github.repository }}.cache:buildcache
              cache-to: type=registry,ref=ghcr.io/${{ github.repository }}.cache:buildcache,mode=max