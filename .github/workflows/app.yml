name: App CI Workflow

on:
  push:
    branches:
      - main

jobs:
    test_code:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4
              with:
                fetch-depth: 0

            - name: Setup Python
              uses: actions/setup-python@v3
            
            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt
            
            - name: Lint with flake8
              run: |
                pip install flake8
                # stop the build if there are Python syntax errors or undefined names
                flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
                # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
                flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

            - name: Test code with pytest
              run: |
                pip install pytest
                pytest .
    
    package_image:
        runs-on: ubuntu-latest
        needs: test_code
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                fetch-depth: 0

            - name: Setup QEMU
              uses: docker/setup-qemu-action@v3

            - name: Setup Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                registry: ghcr.io
                username: ${{ github.repository_owner }}
                password: ${{ secrets.CI_ACCESS_TOKEN }}

            - name: Docker meta
              id: docker-meta
              uses: docker/metadata-action@v5
              with:
                images: |
                  ghcr.io/${{ github.repository }}
                tags: |
                  type=raw,value=latest,enable={{is_default_branch}}
                  type=semver,pattern={{version}}
                  type=semver,pattern={{major}}.{{minor}}
                  type=semver,pattern={{major}}
            
            - name: Downcase Repo
              run: |
                echo "REPO=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}
                echo "REPO_VERSION=${GITHUB_REF_NAME#v}" >> ${GITHUB_ENV}
                echo ${GITHUB_REF_NAME#v}                  

            - name: Build and push
              uses: docker/build-push-action@v5
              with:
                context: .
                platforms: linux/amd64,linux/arm64
                file: Dockerfile
                push: true
                tags: ${{ steps.docker-meta.outputs.tags }}
                labels: ${{ steps.docker-meta.outputs.labels }}
                cache-from: type=registry,ref=ghcr.io/${{ env.REPO }}:buildcache
                cache-to: type=registry,ref=ghcr.io/${{ env.REPO }}:buildcache,mode=max